\contentsline {todo}{\textbf {Open question:} Should the memory module provide shared memory semantics for on-node communication between MPI processes? A first analysis suggests these transactions are simply messages across a different type of transport, but is there room for enhancement if we instead treat them as a special type of memory buffer?}{6}
\contentsline {todo}{\textbf {Open question:} Is it worth the semantic overhead of adding another module to represent a \emph {group} of transports? SF: my opinion here is that we could easily implement a group transport as a transport itself and keep logic for distribution there, but this merits some discussion, IMO.}{7}
\contentsline {todo}{\textbf {Open question:} How best to handle addresses, and in what module do the various responsibilities live? It's nontrivial to divorce the requirements, since the progress engine will likely need some notion of locality when considering ranks, and will need to maintain some type of mapping between ranks and the specific transports that understand their addresses; a full-traversal approach through transport modules may fail due to ambiguous addresses (consider TCP vs. IPoIB).}{7}
\contentsline {todo}{\textbf {Open question:} \emph {Can} these responsibilities be divorced? What functionality is required of this module to validate existing data, communications, and transactions? SF: This may map to extensions to the public API, but it's hard to figure out how this could operate without requiring hooks inside the other modules, which would require special flavors of those and call into question the need for this module. However, there is definitely recovery logic that could live here -- not sure what best direction is.}{8}
